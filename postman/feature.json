{
	"info": {
		"_postman_id": "9d887bb1-77a4-4e80-92d0-d5fa7bf374ca",
		"name": "feature_comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3214888"
	},
	"item": [
		{
			"name": "Preparation",
			"item": [
				{
					"name": "Создание пользователя 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(201);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"user_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Пользователь для тестирования комментариев\",\r\n  \"email\": \"UserForTestComments@ya.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание пользователя 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(201);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"user2_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Пользователь для тестирования комментариев_2\",\r\n  \"email\": \"UserForTestComments2@ya.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(201);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"cat_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Категория для тестирования комментариев\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(201);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"event_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Событие для тестирования Комментариев\",\r\n    \"annotation\": \"Событие для тестирования Комментариев\",\r\n    \"description\": \"Событие для тестирования Комментариев\",\r\n    \"category\": \"{{cat_id}}\",\r\n    \"eventDate\": \"2030-01-01 00:00:00\",\r\n    \"location\": {\r\n        \"lat\": 11.1234,\r\n        \"lon\": 12.1234\r\n    },\r\n    \"paid\": false,\r\n    \"participantLimit\": 1,\r\n    \"requestModeration\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:userId/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"events"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Попытка создать комментарий для несуществующего события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(404);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": 999999,\r\n    \"text\": \"Комментарий 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Попытка создать комментарий от несуществующего пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(404);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": {{event_id}},\r\n    \"text\": \"Комментарий 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments"
							],
							"variable": [
								{
									"key": "userId",
									"value": "999999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание комментария 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(201);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"comment_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": {{event_id}},\r\n    \"text\": \"Комментарий 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание комментария 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(201);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"comment2_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": {{event_id}},\r\n    \"text\": \"Комментарий 2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user2_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос всех своих комментариев",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(200);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос всех комментариев события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(200);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments/?eventId={{event_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								""
							],
							"query": [
								{
									"key": "eventId",
									"value": "{{event_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос комментария по его id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(200);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "{{comment_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Попытка изменить чужой комментарий",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 409 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"Комментарий 1 (исправленный)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments/:commentId/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments",
								":commentId",
								""
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user_id}}"
								},
								{
									"key": "commentId",
									"value": "{{comment2_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение своего комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(200);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"Комментарий 1 (исправленный)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments/:commentId/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments",
								":commentId",
								""
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user_id}}"
								},
								{
									"key": "commentId",
									"value": "{{comment_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение комментария Администратором",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(200);\r",
									"pm.response.to.be.withBody;\r",
									"pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"Комментарий 2 (исправленный Админом)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "{{comment2_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Попытка удаления чужого комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 409 и тело ответа в формате JSON\", function(){\r",
									"pm.response.to.have.status(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user_id}}"
								},
								{
									"key": "commentId",
									"value": "{{comment2_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление своего комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 204\", function(){\r",
									"pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId",
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user_id}}"
								},
								{
									"key": "commentId",
									"value": "{{comment_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария Администратором",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 204\", function(){\r",
									"pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "{{comment2_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "user2_id",
			"value": ""
		},
		{
			"key": "cat_id",
			"value": ""
		},
		{
			"key": "event_id",
			"value": ""
		},
		{
			"key": "comment_id",
			"value": ""
		},
		{
			"key": "comment2_id",
			"value": ""
		}
	]
}